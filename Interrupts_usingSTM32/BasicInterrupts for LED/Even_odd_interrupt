#include "stm32f429xx.h"
void uart_init(void);
void UART4_IRQHandler();
void uart_callback();
int main(){
uart_init();
	while(1){}
}

void uart_init(void){
/*clock enable for UART4 and GPIOCEN*/
RCC->APB1ENR |= RCC_APB1ENR_UART4EN;
RCC->AHB1ENR |= RCC_AHB1ENR_GPIOCEN | RCC_AHB1ENR_GPIOGEN;
/*PORT G PG13 AND PG14 as output*/
GPIOG->MODER |= (1<<26 | 1<<28);
/*set PC10 and PC11 for TX and RX*/
GPIOC->MODER |= (1<<21 | 1<<23);
GPIOC->AFR[1] |= (8<<8 | 8<<12);
/*set baud rate*/
UART4->BRR |= 0x0683;
/*enable RX and RX interrupt*/
UART4->CR1 |= (1<<2 | 1<<5);
NVIC_EnableIRQ(UART4_IRQn);
/*1 stop bit and no flow control*/
UART4->CR2 = 0;
UART4->CR3 = 0;
/*enable UART4*/
UART4->CR1 |= (1<<13);
}
/*if we enter odd numbers in real-term, they result in active red LED, if even terms, green LED*/
void uart_callback(){
	int a;
	a = UART4->DR;
	if ((a%2 == 0)){
		GPIOG->ODR &= ~(1<<14);
		GPIOG->ODR |= (1<<13);
		}
	else{
		GPIOG->ODR &= ~(1<<13);
		GPIOG->ODR |= (1<<14);
		}
}
