
#include <string.h>
#include "stm32f429xx.h"
/*Define prototypes*/
void gpio_def(void);
char c;
void uart_send(int c);
void uart_def(void);
void delayms(int n);

int main(){
gpio_def();
uart_def();
/*Character to display*/
char m[]="Welcome to UART\r\n"; 
int i;
i = 0;
/*Setting size of the character for loop*/
int size = strlen(&m);
while(1){	
	for (i = 0; i<size; i++)
		if (GPIOA->IDR & GPIO_IDR_ID0)
		uart_send(m[i]);
		else 
			GPIOG->ODR |= 1<<14;
			delayms(500);
			GPIOG->ODR = 0;		
	}
}
void gpio_def(void){
/*Enable clocks for GPIOC and GPIOA and UART4*/
RCC->AHB1ENR = RCC_AHB1ENR_GPIOCEN | RCC_AHB1ENR_GPIOAEN | RCC_AHB1ENR_GPIOGEN;
RCC->APB1ENR = RCC_APB1ENR_UART4EN;
/*Set mode for Push button as input*/
GPIOA->MODER &= ~(1<<0);
/*Setting PC10 and PC11 to AF */
GPIOC->MODER = (1<<21) | (1<<23);
/*Setting PC10 and PC11 to TX and RX*/
GPIOC->AFR[1] = (1<<11) | (1<<15);
/*Setting PG14 as O/P*/
GPIOG->MODER |= 1<<28;
}
void uart_def(void){
/*Set baudrate to 9600*/
UART4->BRR = 0x683;
/*UART Enable*/
UART4->CR1 = (1<<13);
/*UART TX enable*/
UART4->CR1 |= (1<<3);
/*Set 1 stop bit*/
UART4->CR2 = 0;
UART4->CR3 = 0;
}
void uart_send(int c){
	while (!(UART4->SR & 0x0080)){}
	UART4->DR = (c & 0xFF);
}
void delayms(int n) {			//give delay
int i;
for (; n > 0; n--)
	for (i = 0; i < 2000; i++);}
