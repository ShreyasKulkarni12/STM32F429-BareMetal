
#include "stm32f429xx.h"
//Initialize functions
void gpio_config(void);
void usart_config(void); 
void delayMs(int);
void usart_write(int c);

void gpio_config(void){
RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN; 				//Clock enable for GPIOA
RCC->APB1ENR |= RCC_APB1ENR_UART4EN;				//Clock enable for UART4
GPIOA->MODER |= (1<<1 | 1<<3); /*0x00000002;*/			//Mode set as Alternate function for PA0 and PA1				
GPIOA->AFR[0] |= (1<<3 | 1<<7); /*0x00000008;*/			//Set PA0 and PA1 as UART_TX/RX resp.							
}
void usart_config(void){
UART4->BRR = 0x0683;						//Baud rate set 9600 (USARTDIV = Fck / 16 x Baud)
UART4->CR1 = 1<<3;						//Enable transmission bit												
UART4->CR2 = 0;					
UART4->CR3 = 0;					
UART4->CR1 |= 0x2000;						//Enable USART
}
void usart_write(int ch){ 
while(!(UART4->SR & 0x0080)){
	}							//Check Status Register and TXE(transmission reg empty) bit, 
UART4->DR = (ch & 0xFF);					//Put value in data register and ensure its 8 bit by masking 0xFF
}
void delayMs(int n) {						//define delay
int i;
for (; n > 0; n--)
	for (i = 0; i < 2000; i++);
}
int main(void){
char m[] = "Hello\r\n";						//character to send
int i;
gpio_config();						
usart_config();							
while (1) { for (i = 0; i < 7; i++) {				//as Hello\r\n has 7 terms,H,e,l,l,o,\r,\n. 
	usart_write(m[i]);  					// write m[0], m[1]... one by one i.e first H then e,l..
		}
delayMs(10);							//delay 10ms
	}
}
