
#include <string.h>
#include "stm32f429xx.h"
/*Define prototypes*/
void gpio_def(void);
char c;
char cr;
void uart_send(int c);
void uart_def(void);
void delayms(int n);
char uart_rec();

int main(){
gpio_def();
uart_def();
/*logic*/
while (1){
	cr = uart_rec();
	if (cr == '1'){
	GPIOG->ODR = (1<<13);
	}
else {
	GPIOG->ODR = (1<<14);
	}
}
}
void gpio_def(void){
/*Enable clocks for GPIOC and GPIOA and UART4*/
RCC->AHB1ENR = RCC_AHB1ENR_GPIOCEN | RCC_AHB1ENR_GPIOAEN | RCC_AHB1ENR_GPIOGEN;
RCC->APB1ENR = RCC_APB1ENR_UART4EN;
/*Set mode for Push button as input*/
GPIOA->MODER &= ~(1<<0);
/*Setting PC10 and PC11 to AF */
GPIOC->MODER = (1<<21) | (1<<23);
/*Setting PC10 and PC11 to TX and RX*/
GPIOC->AFR[1] = (1<<11) | (1<<15);
/*Setting PG13 and PG14 as O/P*/
GPIOG->MODER |= 1<<26;
GPIOG->MODER |= 1<<28;
}
void uart_def(void){
/*Set baudrate to 9600*/
UART4->BRR = 0x683;
/*UART Enable*/
UART4->CR1 = (1<<13);
/*UART TX and RX enable*/
UART4->CR1 |= (1<<3) | (1<<2) ;
/*Set 1 stop bit*/
UART4->CR2 = 0;
UART4->CR3 = 0;
}
char uart_rec(){
	while (!(UART4->SR & USART_SR_RXNE)){}
		return UART4->DR;
}
void delayms(int n) {			//give delay
int i;
for (; n > 0; n--)
	for (i = 0; i < 2000; i++);}
